openapi: "3.0.0"
info:
  title: e-luborzyca server backend
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /facebook-session:
    post:
      operationId: NewFacebookSession
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:                 
                - email                
                - accessToken
                - data_access_expiration_time
              properties:
                name:
                  type: string
                email:
                  type: string
                id:
                  type: string
                accessToken:
                  type: string
                userID:
                  type: string
                expiresIn:
                  type: integer
                signedRequest:
                  type: string
                graphDomain:
                  type: string
                data_access_expiration_time:
                  type: integer
      responses:
        '200':
          description: OK
  /session:
    get:
      security:
        - cookieAuth: []
      operationId: GetSession
      responses:
        '200':
          description: OK
    post:
      operationId: NewSession
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:                 
                - email                
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
    delete:
      operationId: DestroySession
      responses:
        '200':
          description: OK
  /user/verify/{verifyToken}:
    post:
      operationId: VerifyUser
      parameters:
        - in: path
          name: verifyToken
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
  /user:
    get:
      security:
        - cookieAuth: []
      operationId: GetUser
      responses:
        '200':
          description: OK
    post:
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:                 
                - email                
                - password
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 50
                password:
                  type: string
                  minLength: 3
                  maxLength: 100
      responses:
        '200':
          description: OK
    put:
      security:
        - cookieAuth: []
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  minLength: 3
                  maxLength: 100
                password:
                  type: string
                username:
                  type: string
                  maxLength: 50
                village:
                  type: string
                homeNumber:
                  type: string
                  maxLength: 20
                addressNotes:
                  type: string
                  maxLength: 200
                street:
                  type: string
                  maxLength: 50
                phone:
                  type: string
                  maxLength: 30
      responses:
        '200':
          description: OK
  /items:
    get:
      operationId: GetItems
      responses:
        '200':
          description: OK
  /item/{itemID}:
    get:
      operationId: GetItem
      parameters:
        - in: path
          name: itemID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
    delete:
      security:
        - cookieAuth: []
      operationId: DeleteItem
      parameters:
        - in: path
          name: itemID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
    put:
      security:
        - cookieAuth: []
      operationId: UpdateItem
      parameters:
        - in: path
          name: itemID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 100
                price:
                  type: integer
                  minimum: 0
                  maximum: 1000000000
                unit:
                  type: string
                availability:
                  type: integer
                  minimum: 1
                  maximum: 4
                firstLastName:
                  type: string
                addressNotes:
                  type: string
                street:
                  type: string
                village:
                  type: string
                homeNumber:
                  type: string
                phone:
                  type: string
                category:
                  type: string
                description:
                  type: string
                  maxLength: 30000
      responses:
        '200':
          description: OK
    patch:
      security:
        - cookieAuth: []
      operationId: ActivateItem
      parameters:
        - in: path
          name: itemID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:                 
                - active                
              properties:
                active:
                  type: boolean
      responses:
        '200':
          description: OK
  /item:
    post:
      security:
        - cookieAuth: []
      operationId: CreateItem
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:                 
                - name
                - price
                - unit
                - availability
                - firstLastName
                - village
                - phone
                - category
                - description
              properties:
                name:
                  type: string
                  maxLength: 100
                price:
                  type: integer
                  minimum: 0
                  maximum: 1000000000
                unit:
                  type: string
                availability:
                  type: integer
                  minimum: 1
                  maximum: 4
                firstLastName:
                  type: string
                addressNotes:
                  type: string
                street:
                  type: string
                village:
                  type: string
                homeNumber:
                  type: string
                phone:
                  type: string
                category:
                  type: string
                description:
                  type: string
                  maxLength: 30000
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      src:
                        type: string
                      thumbnail:
                        type: string
                      thumbnailWidth:
                        type: integer
                      thumbnailHeight:
                        type: integer
      responses:
        '200':
          description: OK
  /image/{imageID}:
    get:
      operationId: GetImage
      parameters:
        - in: path
          name: imageID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
  /image:
    post:
      security:
        - cookieAuth: []
      operationId: UploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
  /units:
    get:
      operationId: GetUnits
      responses:
        '200':
          description: OK
  /categories:
    get:
      operationId: GetCategories
      responses:
        '200':
          description: OK
  /villages:
    get:
      operationId: GetVillages
      responses:
        '200':
          description: OK


components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: SESSION_ID
